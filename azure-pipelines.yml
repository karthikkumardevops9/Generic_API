trigger:
  branches:
    include:
      - main  # Change this to your main branch name

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azureWebApp: 'karthik2-webapp'  # Change this to your Azure Web App name

stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: Build
    displayName: 'Build job'
    pool:
      name: Default   # Use the default agent pool where your self-hosted agent is registered
    steps:
    - checkout: self
      submodules: true

    - task: DotNetCoreCLI@2
      displayName: 'Restore dependencies'
      inputs:
        command: 'restore'
        projects: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathtoPublish: '$(build.artifactstagingdirectory)'
        artifactName: 'drop'

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  jobs:
  - deployment: DeploymentJob
    displayName: 'Deploy job'
    pool:
      name: Default   # Use the default agent pool where your self-hosted agent is registered
    environment: 'qa'  # Change this to your environment name in Azure DevOps
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none  # Skip checking out the code again
          - task: DownloadBuildArtifacts@0
            displayName: 'Download artifact'
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: 'testintegration'  # The name of your Azure service connection
              appType: 'webApp'
              appName: '$(azureWebApp)'
              package: '$(System.ArtifactsDirectory)/drop/**/*.zip'
              deploymentMethod: 'zipDeploy'  # Use zip deployment for self-hosted agents
